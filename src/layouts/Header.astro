---
import { DialogMenu } from "@/components/react/DialogMenu";
import { ThemeDropdown } from "@/components/react/ThemeDropdown";
import { BriefcaseBusiness, FolderCode, UserRound, Mail } from "lucide-astro";

const navItems = [
  { href: "#experiencia", icon: BriefcaseBusiness, text: "Experiencia" },
  { href: "#proyectos", icon: FolderCode, text: "Proyectos" },
  { href: "#sobre-mi", icon: UserRound, text: "Sobre mi" },
  { href: "#contacto", icon: Mail, text: "Contacto" },
];
---

<header class="w-full h-max fixed z-50 transition-colors duration-300">
  <div
    class="w-full h-full flex justify-center max-w-screen-lg mx-auto relative"
  >
    <div
      id="main-header"
      class="w-full h-max flex items-center justify-between px-6 py-1 md:px-6 md:py-3 rounded-3xl transition-all duration-300"
    >
      <div class="w-max h-max flex items-center">
        <h1
          class="text-2xl lg:text-3xl font-bold leading-6 gradient-text select-none hover:scale-105 transition-transform duration-200"
        >
          av.
        </h1>
      </div>
      <nav class="w-full hidden md:flex items-center justify-center gap-x-7">
        {
          navItems.map((item, index) => (
            <li
              class="text-white list-none transition-colors duration-300 ease-out hover:text-[#22C55E] nav-item"
              style={`--delay: ${index * 100}ms`}
            >
              <a
                href={item.href}
                aria-label={item.href.slice(1)}
                class="flex items-center gap-x-2 cursor-pointer"
              >
                <item.icon class="w-5 h-5" />
                <span class="text-sm md:text-base lg:text-lg leading-6 font-medium text-nowrap">
                  {item.text}
                </span>
              </a>
            </li>
          ))
        }
      </nav>
      <div class="w-max h-full flex items-center gap-x-1">
        <ThemeDropdown client:load />
        <DialogMenu client:load />
      </div>
    </div>
  </div>
</header>

<script>
  const header = document.getElementById("main-header");
  const navItems = document.querySelectorAll(".nav-item");

  function updateHeader() {
    if (window.scrollY > 60) {
      header?.classList.add("scrolled");
    } else {
      header?.classList.remove("scrolled");
    }
  }

  window.addEventListener("scroll", updateHeader);
  window.addEventListener("load", updateHeader);
  window.addEventListener("resize", updateHeader);

  document.addEventListener("DOMContentLoaded", () => {
    header?.classList.add("animate-in");
    navItems.forEach((item, index) => {
      setTimeout(() => {
        item.classList.add("animate-in");
      }, index * 100);
    });
  });
</script>

<style>
  .gradient-text {
    background: linear-gradient(90deg, #9845e8 0%, #3377ff 55%, #dd5789 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  #main-header {
    background-color: transparent;
    transition: all 0.3s ease;
    opacity: 0;
    transform: translateY(-20px);
    margin-top: 10px;
  }

  #main-header.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  #main-header.scrolled {
    margin-top: 20px;
    margin-left: 12px;
    margin-right: 12px;
    backdrop-filter: blur(10px);
    background-color: #383838cc;
    box-shadow:
      0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }
  .light #main-header.scrolled {
    background-color: #f7f7fecc;
  }
  #main-header.scrolled:hover {
    box-shadow:
      0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 10px 10px -5px rgba(0, 0, 0, 0.04);
    transition: box-shadow 0.3s ease;
  }

  .nav-item {
    opacity: 0;
    transform: translateY(-10px);
  }

  .nav-item.animate-in {
    animation: fadeInDown 0.5s forwards;
  }
  .nav-item.active a {
    color: #22c55e;
  }
  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
